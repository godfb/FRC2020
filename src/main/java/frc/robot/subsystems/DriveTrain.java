// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMVictorSPX speedController1;
private Spark speedController2;
private SpeedControllerGroup leftSpeedControllerGroup1;
private PWMVictorSPX speedController3;
private Spark speedController4;
private SpeedControllerGroup rightSpeedControllerGroup2;
private DifferentialDrive differentialDrive1;
private AnalogGyro analogGyro1;
private Servo leftServo1;
private Servo rightServo2;
private Encoder leftQuadratureEncoder1;
private Encoder rightQuadratureEncoder1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
speedController1 = new PWMVictorSPX(1);
addChild("Speed Controller 1",speedController1);
speedController1.setInverted(false);
        
speedController2 = new Spark(3);
addChild("Speed Controller 2",speedController2);
speedController2.setInverted(false);
        
leftSpeedControllerGroup1 = new SpeedControllerGroup(speedController1, speedController2  );
addChild("Left Speed Controller Group 1",leftSpeedControllerGroup1);

        
speedController3 = new PWMVictorSPX(0);
addChild("Speed Controller 3",speedController3);
speedController3.setInverted(false);
        
speedController4 = new Spark(2);
addChild("Speed Controller 4",speedController4);
speedController4.setInverted(false);
        
rightSpeedControllerGroup2 = new SpeedControllerGroup(speedController3, speedController4  );
addChild("Right Speed Controller Group 2",rightSpeedControllerGroup2);

        
differentialDrive1 = new DifferentialDrive(leftSpeedControllerGroup1, rightSpeedControllerGroup2);
addChild("Differential Drive 1",differentialDrive1);
differentialDrive1.setSafetyEnabled(true);
differentialDrive1.setExpiration(0.1);
differentialDrive1.setMaxOutput(1.0);

        
analogGyro1 = new AnalogGyro(0);
addChild("AnalogGyro 1",analogGyro1);
analogGyro1.setSensitivity(0.007);
        
leftServo1 = new Servo(5);
addChild("Left Servo 1",leftServo1);

        
rightServo2 = new Servo(4);
addChild("Right Servo 2",rightServo2);

        
leftQuadratureEncoder1 = new Encoder(1, 3, false, EncodingType.k1X);
addChild("Left Quadrature Encoder 1",leftQuadratureEncoder1);
leftQuadratureEncoder1.setDistancePerPulse(1.0);
leftQuadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);
        
rightQuadratureEncoder1 = new Encoder(0, 2, false, EncodingType.k1X);
addChild("Right Quadrature Encoder 1",rightQuadratureEncoder1);
rightQuadratureEncoder1.setDistancePerPulse(1.0);
rightQuadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

